# GitLab CI configuration for the "HenDi-ODD"
variables:
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""
  IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  HENDI_CI_DOCKER_IMAGE: "registry.git.uni-paderborn.de/vife/henze-digital/hendi-ci-docker-image:develop"
  GIT_SUBMODULE_STRATEGY: recursive
  GIT_DEPTH: 10

default:
  image: $HENDI_CI_DOCKER_IMAGE
  
stages:
  - build
  - test
  - deploy

.setup_git:
  before_script:
    - git config user.email "${GITLAB_USER_EMAIL}"
    - git config user.name "${GITLAB_USER_NAME}"
    - git remote set-url origin https://${HENDI_ODD_CI_TOKEN_NAME}:${HENDI_ODD_CI_TOKEN}@git.uni-paderborn.de/vife/henze-digital/HenDi-ODD.git
    - git pull origin ${CI_COMMIT_REF_NAME}

.default_rules:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_PIPELINE_SOURCE == "push"
      changes:
        - src/Specs/common-specs.odd.xml
    - when: never

biblio-build:
  stage: build
  extends: .setup_git
  script:
    - ant biblio
#  rules:
#    - !reference [.default_rules, rules]
#    - changes:
#        - src/Specs/schemaSpec-biblio.odd.xml

biblio-test:
  stage: test
  needs: 
    - job: biblio-build
      artifacts: true
  script:
    - ant check-rng-output -DselectedSchema=hwhBiblio
#  rules:
#    - !reference [.default_rules, rules]
#    - changes:
#      - src/Specs/schemaSpec-biblio.odd.xml

biblio-deploy:
  stage: deploy
  extends: .setup_git
  needs: 
    - job: biblio-build
      artifacts: true
    - job: biblio-test
  script:
    - git add .
    - git commit -m "auto compile schema biblio"
    #- git push origin HEAD:${CI_COMMIT_REF_NAME} -o ci.skip
  